[circus]
check_delay = 5
endpoint = ${options['endpoint']}
pubsub_endpoint = ${options['pubsub_endpoint']}
umask = 002
logoutput = ${parts.buildout.directory}/var/log/circus.log
{% if 'httpd' in options and options['httpd'] %}
httpd = 1
httpd_host = ${options['httpd_host']}
httpd_port = ${options['httpd_port']}
{% end %}
statsd = ${options['statsd']}

{% if options['couchdb'] %}
[watcher:db]
cmd = couchdb
args = -a ${parts.buildout.directory}/etc/couchdb.ini
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/couchdb.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/couchdb.stderr.log
{% if 'log_size' in options %}
stdout_stream.max_bytes = ${options['log_size']}
stderr_stream.max_bytes = ${options['log_size']}
{% end %}
{% if 'backup_count' in options %}
stdout_stream.backup_count = ${options['backup_count']}
stderr_stream.backup_count = ${options['backup_count']}
{% end %}

[env:db]
HOME = ${parts.buildout.directory}/var
{% end %}

{% if options['concord'] %}
[watcher:concord]
cmd = ${parts.buildout.directory}/bin/concord
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/concord.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/concord.stderr.log
{% if 'log_size' in options %}
stdout_stream.max_bytes = ${options['log_size']}
stderr_stream.max_bytes = ${options['log_size']}
{% end %}
{% if 'backup_count' in options %}
stdout_stream.backup_count = ${options['backup_count']}
stderr_stream.backup_count = ${options['backup_count']}
{% end %}
{% end %}

[env]
TZ = ${options['timezone']}
{% if 'sandbox_mode' in options %}
SANDBOX_MODE = true
{% end %}

{% if options['webapp'] %}
[watcher:webapp]
cmd = ${parts.buildout.directory}/bin/chaussette --fd $(circus.sockets.web) --backend=gevent paste:${parts['openregistry.api.ini'].output}
numprocesses = ${options['numprocesses'] if 'numprocesses' in options else '1'}
use_sockets = True
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/webapp.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/webapp.stderr.log
{% if 'log_size' in options %}
stdout_stream.max_bytes = ${options['log_size']}
stderr_stream.max_bytes = ${options['log_size']}
{% end %}
{% if 'backup_count' in options %}
stdout_stream.backup_count = ${options['backup_count']}
stderr_stream.backup_count = ${options['backup_count']}
{% end %}

[socket:web]
host = ${options['web_host']}
port = ${options['web_port']}

{% if 'migration_skip' in options %}
[env:webapp]
MIGRATION_SKIP = True
{% end %}

[plugin:webapp_resource]
use = circus.plugins.resource_watcher.ResourceWatcher
watcher = webapp
max_cpu = 70
max_mem = 100M
{% end %}

{% if 'flapping' in options and options['flapping'] %}
[plugin:flapping]
use = circus.plugins.flapping.Flapping
max_retry = 5
{% end %}

{% if options['penstock'] %}
[watcher:penstock]
cmd = ${parts.buildout.directory}/bin/penstock ${parts.buildout.directory}/etc/penstock.yaml
numprocesses = 1
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/penstock.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/penstock.stderr.log
{% if 'log_size' in options %}
stdout_stream.max_bytes = ${options['log_size']}
stderr_stream.max_bytes = ${options['log_size']}
{% end %}
{% if 'backup_count' in options %}
stdout_stream.backup_count = ${options['backup_count']}
stderr_stream.backup_count = ${options['backup_count']}
{% end %}
{% end %}

{% if options['databridge'] %}
[watcher:databridge]
cmd = ${parts.buildout.directory}/bin/databridge ${parts.buildout.directory}/etc/databridge.yaml
numprocesses = 1
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/databridge.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/databridge.stderr.log
{% end %}

{% if options['auctions_databridge'] %}
[watcher:auctions_databridge]
cmd = ${parts.buildout.directory}/bin/databridge ${parts.buildout.directory}/etc/auctions_databridge.yaml
numprocesses = 1
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/auctions_databridge.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/auctions_databridge.stderr.log
{% end %}

{% if options['concierge'] %}
[watcher:concierge]
cmd = ${parts.buildout.directory}/bin/concierge_worker ${parts.buildout.directory}/etc/concierge.yaml
numprocesses = 1
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/concierge.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/concierge.stderr.log
{% end %}

{% if options['convoy'] %}
[watcher:convoy]
cmd = ${parts.buildout.directory}/bin/openregistry_convoy ${parts.buildout.directory}/etc/convoy.yaml
numprocesses = 1
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/convoy.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/convoy.stderr.log
{% end %}
