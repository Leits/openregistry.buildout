main:
  # Сервер api з аукціонами
  resources_api_server: http://127.0.0.1:12345
  # Версія api
  resources_api_version: "2.5"
  # Сервер з публічними даними аукнціонів в деяких випадках може відрізніятись від
  # resources_api_server
  public_resources_api_server: http://127.0.0.1:12345
  # Параметри для налаштування локальної бази данних
  couch_url:
    # Хост на якому знаходиться сервер бази данних
    # ЗАЛЕЖНОСТІ:
    # файл: couchdb.ini, параметр: bind_address
    # файл: concierge.yaml, параметр: db.host
    # файл: convoy.yaml, параметр: couchdb.host
    # файл: databridge.yaml, параметр: couch_url.host
    # файл: openregistry.api.ini, параметр: 'couchdb.url'
    host: "127.0.0.1"
    # Порт на якому доступний сервер бази данних
    # ЗАЛЕЖНОСТІ:
    # файл: couchdb.ini, параметр: port
    # файл: concierge.yaml, параметр: db.port
    # файл: convoy.yaml, параметр: couchdb.port
    # файл: databridge.yaml, параметр: couch_url.port
    # файл: openregistry.api.ini, параметр: 'couchdb.url'
    port: "5984"
    # Користувач
    # ЗАЛЕЖНОСТІ:
    # файл: couchdb.ini
    # файл: concierge.yaml db.login
    # файл: convoy.yaml, параметр: couchdb.user
    # файл: databridge.yaml, параметр: couch_url.user
    # файл: openregistry.api.ini, параметр: 'couchdb.url'
    user: ""
    # Пароль користувача
    # ЗАЛЕЖНОСТІ:
    # файл: couchdb.ini
    # файл: concierge.yaml db.password
    # файл: convoy.yaml, параметр: couchdb.password
    # файл: databridge.yaml, параметр: couch_url.password
    # файл: openregistry.api.ini, параметр: 'couchdb.url'
    password: ""
  # Назва бази даних
  db_name: ea_auctions
  # Значення в секундах на яке збільшиться таймаут при неуспішному запиті клієнтом
  client_inc_step_timeout: 0.1
  # Значення в секундах на яке зменшиться таймаут при успішному запиті клієнтом
  client_dec_step_timeout: 0.02
  # Поріг таймауту в секундах при якому клієнту скинуться куки
  drop_threshold_client_cookies: 1.5
  # Таймаут для потоків які опрацьовують чергу з ресурсами коли вона пуста
  worker_sleep: 5
  # Таймаут для потоків які працюють з чергою повторного опрацювання
  retry_default_timeout: 5
  # Число спроб опрацювати ресурс, після якого він не буде кластись в
  # чергу повторного опрацювання і буде проігнорований
  retries_count: 10
  # Час (сек.) який потік буде чекати поки в черзі не появиться ресурс
  queue_timeout: 5
  # Поріг заповнення черги (%) вище якого будуть додаватись потоки,
  # поки не буде досягнуто максимльного значення потоків workers_max
  workers_inc_threshold: 75
  # Поріг заповнення черги (%) нижче якого будуть зменшуватись потоки,
  # до мінімальної к-ті, workers_min
  workers_dec_threshold: 35
  # Максимальна к-ть потоків для роботи з основною чергою
  workers_max: 1
  # Мінімальна к-ть потоків для роботи з основною чергою
  workers_min: 1
  # Мінімальна к-ть потоків для роботи з чергою повторного опрацювання
  retry_workers_min: 1
  # Максимальна к-ть потоків для роботи з чергою повторного опрацювання
  retry_workers_max: 3
  # Розмір основної черги, значення '-1' вказує на те що черга не обмежена в розмірі
  resource_items_queue_size: 100
  # Розмір черги повторного опрацювання,
  # значення '-1' вказує на те що черга не обмежена в розмірі
  retry_resource_items_queue_size: -1
  # К-ть потоків для наповнення основної черги, це значення завжди повинно бути 1
  filter_workers_count: 1
  # Інтервал (сек.) з яким моніторяться черги і потоки і клієнти
  watch_interval: 10
  # К-ть елементів яку отримуватиме клієнт при одному запиту, максимальне значення 1000
  resource_items_limit: 100
  # Назва ресурсу, інші можливі значення 'contracts', 'plans', 'tenders'
  resource: auctions
  # Значення заголовка 'User-Agent' для клієнта
  user_agent: convoy
  # Макс. к-ть елементів яка зберігається за один запит до бази даних
  bulk_save_limit: 1000
  # Інтервал (сек.) з яким зберігаються дані в базі
  bulk_save_interval: 3
  # Макс. к-ть елементів яка відправляється на вюшку бази за один запит
  bulk_query_limit: 5000
  # Інтервал (сек.) з яким здійснються запити на вюшку бази даних
  bulk_query_interval: 3
  # Додаткові параметри для керування швидкодією API клієнта
  retrievers_params:
    # Таймаут з яким будуть робитись запити назад
    down_requests_sleep: 10
    # Таймаут з яким будуть робитись запити вперед
    up_requests_sleep: 10
    # Макс. таймаут з яким будуть робитись запити вперед при отримані "пустої" відповіді
    up_wait_sleep: 30
    # Мін. таймаут з яким будуть робитись запити вперед при отримані "пустої" відповіді
    up_wait_sleep_min: 5
    # Розмір черги в клієнті
    queue_size: 1001
version: 1

formatters:
  simple:
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

handlers:
  console:
    class: logging.StreamHandler
    level: ERROR
    formatter: simple
    stream: ext://sys.stdout

loggers:
  openprocurement.bridge.basic:
    handlers: [console]
    propagate: no
    level: INFO
