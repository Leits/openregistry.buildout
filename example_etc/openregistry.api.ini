[pipeline:main]
pipeline = request_id server_cookie api

[app:api]
use = egg:openregistry.api
couchdb.db_name = test
# DEPENDENCIES:
# file: convoy.yaml
# file: concierge.yaml
# file: databridge.yaml
# file: auctions_databridge.yaml
# file: couchdb.ini
couchdb.url = http://127.0.0.1:5984/
auth.file = /path/to/buildout_dir/openregistry.buildout/auth.ini
pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = true
pyramid.default_locale_name = en
exclog.extra_info = true
plugins = api,assets.core,assets.claimrights,assets.basic,assets.compound,lots.core,lots.basic
filter-with = profile

[filter:profile]
use = egg:repoze.profile
log_filename = myapp.profile
cachegrind_filename = cachegrind.out.myapp
discard_first_request = true
path = /__profile__
flush_at_shutdown = true
unwind = false

[filter:request_id]
paste.filter_factory = request_id_middleware.middleware:RequestIdMiddleware.factory
env_request_id = REQUEST_ID
resp_header_request_id = X-Request-ID

[filter:server_cookie]
paste.filter_factory = server_cookie_middleware.middleware:ServerCookieMiddleware.factory
cookie_name = SERVER_ID

[server:main]
use = egg:chaussette
host = 0.0.0.0
port = 6543
backend = gevent

# Begin logging configuration

[loggers]
keys = root,openregistry,exc_logger

[handlers]
keys = console,statsd

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console,statsd

[logger_openregistry]
level = DEBUG
handlers =
qualname = openregistry

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_statsd]
class = statsdhandler.StatsdHandler
args = ("/path/to/buildout_dir/openregistry.buildout/example_etc/statd_api_handler.yaml",)
level = DEBUG

[logger_exc_logger]
level = ERROR
handlers =
qualname = exc_logger
propagate = 0

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
