[buildout]
extensions = mr.developer
package-name =
    openregistry.api
    openregistry.assets.core
    openregistry.assets.basic
    openregistry.lots.core
    openregistry.lots.basic
    openprocurement.edge.databridge
    openprocurement_client
    openregistry.concierge
    openregistry.convoy
parts =
    scripts
    couchpy
    circus
    circusd
    circusctl
    circus.ini
    couchdb.ini
    openregistry.api.ini
    extra_scripts
    databridge.yaml
    auctions_databridge.yaml
    concierge.yaml
    convoy.yaml
eggs =
    chaussette
    request_id_middleware
    server_cookie_middleware
    ${:package-name}
find-links =
    http://op:x9W3jZ@dist.quintagroup.com/op/

[config-from-template]
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/templates/${:_buildout_section_name_}
output = ${buildout:directory}/etc/${:_buildout_section_name_}

[scripts]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = python
scripts = chaussette

[extra_scripts]
recipe = zc.recipe.egg
eggs =
     openregistry.concierge
     openprocurement.edge.databridge
     openregistry.convoy

[circus]
recipe = zc.recipe.egg
eggs =
    circus
    circus-web
interpreter =
scripts =
    circusd-stats
    circus-top
    circus-plugin
    circushttpd

[couchpy]
<=circus
eggs = CouchDB
scripts =
    couchpy
    couchdb-replicate

[circusd]
<=circus
initialization =
    sys.argv[1:1] = ('${buildout:directory}/etc/circus.ini').split()
scripts = circusd

[circusctl]
<=circus
initialization =
    sys.argv[1:1] = ('--endpoint ${circus.ini:endpoint}').split()
scripts = circusctl

[circus.ini]
<= config-from-template
couchdb = True
concord = True
penstock =
statsd = True
webapp = True
convoy =
auctions_databridge =
web_port = 6543
web_host = 0.0.0.0
endpoint = ipc://${buildout:directory}/var/circus_endpoint
pubsub_endpoint = ipc://${buildout:directory}/var/circus_pubsub
timezone = Europe/Kiev

[couchdb.ini]
<= config-from-template
port = 5984
host = 127.0.0.1

[openregistry.api.ini]
<= config-from-template
couchdb_url = http://${couchdb.ini:host}:${couchdb.ini:port}/
couchdb_db = openregistry
debug = false
auth_file = ${buildout:directory}/auth.ini
exc_logger = 1
plugins = main,api

[logrotate.conf]
<= config-from-template
logs_bucket =
logs_dir =
aws_access_key = ${openregistry.api.ini:aws_access_key}
aws_secret_key = ${openregistry.api.ini:aws_secret_key}

[logrotate-hourly]
recipe = z3c.recipe.usercrontab
times = @hourly
command = /usr/sbin/logrotate --state ${buildout:directory}/var/logrotate.status ${logrotate.conf:output} >>${buildout:directory}/var/log/logrotate.log 2>&1

[awscli]
recipe = zc.recipe.egg
scripts = aws

[autostart]
recipe = z3c.recipe.usercrontab
times = @reboot
command = ${buildout:directory}/bin/circusd --daemon --pidfile ${buildout:directory}/circus.pid

[data_bridge_defaults]
<= config-from-template
input = ${buildout:directory}/templates/databridge.yaml
resources_api_server = https://lb.api-sandbox.registry.ea.openprocurement.net
resources_api_version = 0.1
couch_url = http://127.0.0.1:5984/
resources = lots
user_agent = edge.databridge
filter_workers_count = 1
retry_workers_count = 1
retry_default_timeout = 10
worker_sleep = 10
watch_interval = 10
public_db = "lots_db"
down_requests_sleep = 10
up_requests_sleep = 10
up_wait_sleep = 30
up_wait_sleep_min = 5
queue_size = 1001
client_inc_step_timeout = 0.1
client_dec_step_timeout = 0.02
drop_threshold_client_cookies = 1.5
worker_sleep = 5
retry_default_timeout = 5
retries_count = 10
queue_timeout = 5
workers_inc_threshold = 75
workers_dec_threshold = 35
workers_min = 1
workers_max = 1
retry_workers_min = 1
retry_workers_max = 3
resource_items_queue_size = 100
retry_resource_items_queue_size = -1
filter_workers_count = 1
watch_interval = 10
resource_items_limit = 100
bulk_save_limit = 1000
bulk_save_interval = 3
bulk_query_interval = 3
bulk_query_limit = 5000
couch_user = "admin"
couch_password = "admin"
couch_host =  "127.0.0.1"
couch_port = "5984"

[databridge.yaml]
<= data_bridge_defaults

[auctions_databridge.yaml]
<= data_bridge_defaults
resources =  auctions
resources_api_server = https://lb.api-sandbox.ea.openprocurement.org
resources_api_version = 2.5
user_agent = convoy
public_db = ea_auctions


[concierge.yaml]
<= config-from-template
db_host = "127.0.0.1"
db_port = "5984"
db_name = "lots_db"
db_login = ""
db_password = ""
lots_url = https://lb.api-sandbox.registry.ea.openprocurement.net
assets_url = https://lb.api-sandbox.registry.ea.openprocurement.net
lots_api_version = 0
assets_api_version = 0
lot_secret_token =
assets_secret_token =
time_to_sleep = 10

[convoy.yaml]
<= config-from-template
timeout = 3
transmitter_timeout = 5
auctions_ds_url = http://docs-sandbox.openprocurement.org
auctions_ds_login =
auctions_ds_password =
auctions_agent = auctions_convoy
auctions_url = ${auctions_databridge.yaml:resources_api_server}
auctions_api_version = ${auctions_databridge.yaml:resources_api_version}
auctions_api_key =
lots_agent = lots_convoy
lots_url = ${concierge.yaml:lots_url}
lots_api_version = ${concierge.yaml:lots_api_version}
lots_api_key = ${concierge.yaml:lot_secret_token}
assets_agent = assets_convoy
assets_url = ${concierge.yaml:assets_url}
assets_api_version = ${concierge.yaml:assets_api_version}
assets_api_key = ${concierge.yaml:assets_secret_token}
db_host = ${auctions_databridge.yaml:couch_host}
db_port = ${auctions_databridge.yaml:couch_port}
db_name = ${auctions_databridge.yaml:public_db}
db_login = ${auctions_databridge.yaml:couch_user}
db_password = ${auctions_databridge.yaml:couch_password}
