# Autogenerated at (2018-03-29 12:03:42) by leits 
[buildout]
extends = 
	base.cfg
	versions.cfg

auto-checkout = ${:package-name}
show-picked-versions = true


[scripts]
eggs += 
	pytest-mock
	pytest-cov
	pytest
	nose
	WebTest
	coverage
	mock
	repoze.profile
	gitpython
scripts += 
	pserve
	nosetests
	pytest

[circus.ini]
webapp = 
lots_databridge = 
auctions_databridge = 
concierge = 
convoy = 


[remotes]
gh = https://github.com/
gh_push = git@github.com:
opgh = https://github.com/openprocurement
opgh_push = git@github.com:openprocurement

[sources]
openprocurement.api = git ${remotes:opgh}/openprocurement.api.git rev=2.5.12+eacore

openregistry.assets.core = git ${remotes:opgh}/openregistry.assets.core.git rev=0.2.6
openregistry.assets.basic = git ${remotes:opgh}/openregistry.assets.basic.git brarevnch=0.1.2
openregistry.assets.compound = git ${remotes:opgh}/openregistry.assets.compound.git rev=0.1.2
openregistry.assets.claimrights = git ${remotes:opgh}/openregistry.assets.claimrights.git rev=0.1.2

openregistry.lots.core = git ${remotes:opgh}/openregistry.lots.core.git rev=0.2.7
openregistry.lots.basic = git ${remotes:opgh}/openregistry.lots.basic.git rev=0.1.2

openprocurement.bridge.basic = git ${remotes:opgh}/openprocurement.bridge.basic rev=0.1.1
openprocurement_client = git ${remotes:opgh}/openprocurement.client.python rev=2.1.3+sale

openregistry.concierge = git ${remotes:opgh}/openregistry.concierge rev=0.3.4
openregistry.convoy = git ${remotes:opgh}/openregistry.convoy.git rev=0.2.1

schematics-flexible = git https://github.com/openprocurement/schematics-flexible.git rev=0.1.3
openprocurement.schemas.dgf = git https://github.com/openprocurement/openprocurement.schemas.dgf.git rev=1.2.2
